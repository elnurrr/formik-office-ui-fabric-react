{"version":3,"file":"static/iframe.4694803af4ba0c154ef0.bundle.js","sources":["webpack:///./src/utils.ts"],"sourcesContent":["import { FieldProps, getIn } from 'formik'\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>\n\nexport function getErrorMessage<T = any>({ field, form }: FieldProps<T>) {\n  const error = getIn(form.errors, field.name)\n  const touched = getIn(form.touched, field.name)\n\n  return touched ? error : undefined\n}\n\nexport function invokeAll(...callbacks: any[]) {\n  return () => {\n    for (const callback of callbacks) {\n      if (callback && typeof callback === 'function') {\n        callback()\n      }\n    }\n  }\n}\n\nexport function createFakeEvent({ name }: { name: string }) {\n  return { target: { name } }\n}\n"],"mappings":"AAAA","sourceRoot":""}